package Pages;

import java.util.Random;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.Select;

import BaseDriver.AppDriver;

public class Createmultiplequotefordifferentvehicle extends AppDriver
{
	public Createmultiplequotefordifferentvehicle()
	{
		PageFactory.initElements(driver, this);
	}
	
	@FindBy(xpath = "//span[contains(text(),'Quotations')]") WebElement Quotationtab;
	@FindBy(xpath = "//a[@id='quote_selection']") WebElement createnewbtn;
	@FindBy(xpath = "//body/div[@id='container-fluid-main']/div[2]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/form[1]/h5[3]/input[1]") 
	WebElement multiquotemultivehicle;
	@FindBy(xpath = "//button[@id='submit_selection']") WebElement submitbtn;
//Customer Data
	@FindBy(id ="sales_person") WebElement sales_person;
	@FindBy(id = "customer_id") WebElement customer_no;
	@FindBy(id = "customer_name") WebElement customer_name;
	@FindBy(id = "customer_address") WebElement customer_address1;
	@FindBy(id = "customer_address_2") WebElement customer_address2;
	@FindBy(id = "customer_city") WebElement customer_city;
	@FindBy(id = "customer_state") WebElement customer_state;
	@FindBy(id = "customer_zip") WebElement customer_zip;
	@FindBy(id = "contact_name_1") WebElement contact_name_1;
	@FindBy(id = "email_address") WebElement email_address;
	@FindBy(id = "cell_tel") WebElement cell_tel;
	@FindBy(id = "work_tel") WebElement work_tel;
	
	//Sales Tax Data
	@FindBy(id = "sales_tax_state") WebElement sales_tax_state;
	@FindBy(id = "SalesTaxRateState ") WebElement SalesTaxRateState;
	
	//Lease Data
	@FindBy(id = "del_acq_date") WebElement del_acq_date;
	
	//Lease Type
	@FindBy(id = "lease_type") WebElement  lease_type;
	@FindBy(id = "maintenance_type") WebElement maintenance_type;
	
	//Vehicle Data 1
	@FindBy(id = "year") WebElement year1;
	@FindBy(id = "make") WebElement make1;
	@FindBy(id = "model") WebElement model1;
	@FindBy(id = "body_type") WebElement body_type1;
	@FindBy(id = "trim") WebElement trim1;
	@FindBy(id = "new_used") WebElement new_used1;
	@FindBy(id = "color") WebElement color1;
	@FindBy(id = "int_color") WebElement int_color1;
	@FindBy(id = "order_type") WebElement order_type1;
	@FindBy(id = "plate_state") WebElement plate_state1;
	@FindBy(id = "plate_type") WebElement plate_type1;
	//Quote1
	@FindBy(id = "Term") WebElement Term1;
		
	//Vehicle Data 2
		@FindBy(id = "year_2") WebElement year2;
		@FindBy(id = "make_2") WebElement make2;
		@FindBy(id = "model_2") WebElement model2;
		@FindBy(id = "body_type_2") WebElement body_type2;
		@FindBy(id = "trim_2") WebElement trim2;
		@FindBy(id = "new_used_2") WebElement new_used2;
		@FindBy(id = "color_2") WebElement color2;
		@FindBy(id = "int_color_2") WebElement int_color2;
		@FindBy(id = "order_type_2") WebElement order_type2;
		@FindBy(id = "plate_state_2") WebElement plate_state2;
		@FindBy(id = "plate_type_2") WebElement plate_type2;
		//Quote2
		@FindBy(id = "Term_2") WebElement Term2;
		
		
		//Vehicle Data 3
		@FindBy(id = "year_3") WebElement year3;
		@FindBy(id = "make_3") WebElement make3;
		@FindBy(id = "model_3") WebElement model3;
		@FindBy(id = "body_type_3") WebElement body_type3;
		@FindBy(id = "trim_3") WebElement trim3;
		@FindBy(id = "new_used_3") WebElement new_used3;
		@FindBy(id = "color_3") WebElement color3;
		@FindBy(id = "int_color_3") WebElement int_color3;
		@FindBy(id = "order_type_3") WebElement order_type3;
		@FindBy(id = "plate_state_3") WebElement plate_state3;
		@FindBy(id = "plate_type_3") WebElement plate_type3;
		//Quote3
		@FindBy(id = "Term_3") WebElement Term3;
	
	public void clickonQuotationTab()
	{
		Quotationtab.click();
		log.info("Quotation Tab clicked");
	    System.out.println("Quotation Tab clicked");
	}
	public void clickonCreateNew()
	{
		createnewbtn.click();
		log.info("Create New button clicked");
	    System.out.println("Create New button clicked");
	}
	public void selectCreateMultipleQuoteForDifferentVehicle()
	{
		multiquotemultivehicle.click();
		log.info("Create Multiple Quote For Different Vehicle Radio button selected");
	    System.out.println("Create Multiple Quote For Different Vehicle Radio button selected");
	}
	public void clickonSubmitButton()
	{
		submitbtn.click();
		log.info("clicked on Submit Button");
	    System.out.println("clicked on Submit Button");
	}
	
	public void selectSalesPerson()
	{
		Select salesperson = new Select(sales_person);
		salesperson.selectByIndex(1);
	}
	
	public void EnterCustomerNumber(String Custono) throws InterruptedException 
	 {
		customer_no.click();
		customer_no.sendKeys(Custono);
	     Thread.sleep(1000);
	     log.info("Customer Number Is Entered");
	     System.out.println("Customer Number Is Entered");
	 }
	 
	 public void EnterCustomerName(String Custoname) throws InterruptedException 
	 {
		 customer_name.click();
		 customer_name.clear();
		 Random r = new Random();
		 char unique = (char)(r.nextInt(26) + 'A'); 
		 String cname = ("VikramTest_" + unique);
		 customer_name.sendKeys(cname);
		 Thread.sleep(3000);
	     log.info("Customer Name is entered"+cname);
	     System.out.println("Customer Name is entered as" + cname);
	 }
	 
	 
	 public void EnterCustomerAddress(String Customeradd) throws InterruptedException 
	 {
		 customer_address1.click();
		 customer_address1.clear();
		 customer_address1.sendKeys(Customeradd);
	     Thread.sleep(1000);
	     log.info("Customer Address is added");
	     System.out.println("Customer Address is added");
	 }
	 
	 public void EnterCustomerAddress2(String Customeradd2) throws InterruptedException 
	 {
		 customer_address2.click();
		 customer_address2.clear();
		 customer_address2.sendKeys(Customeradd2);
	     Thread.sleep(1000);
	     log.info("Customer Address2 is added");
	     System.out.println("Customer Address2 is added");
	 }
	 
	 public void EnterCustomerCity(String Customercity) throws InterruptedException 
	 {
		 customer_city.click();
		 customer_city.clear();
		 customer_city.sendKeys(Customercity);
	     Thread.sleep(1000);
	     log.info("Customer City is added");
	     System.out.println("Customer City is added");
	 }
	 public void selectState()
	 {
		 Select selstate = new Select(customer_state);
		 selstate.selectByIndex(1);
	 }
	 
	 public void EnterCustomerZip(String Customerzip) throws InterruptedException 
	 {
		 customer_zip.click();
		 customer_zip.clear();
		 customer_zip.sendKeys(Customerzip);
	     Thread.sleep(1000);
	     log.info("Customer Zip is added");
	     System.out.println("Customer Zip is added");
	 }
	 
	 public void enterContactName()
	 {
		 contact_name_1.sendKeys("bathala");
	 }
	 
	 public void enterEmail()
	 {
		 email_address.sendKeys("bvikram@pisoftek.com");
	 }
	 
	 public void enterCellTell()
	 {
		 cell_tel.sendKeys("8802954478"); 
	 }
	 
	 public void enterWorkTell()
	 {
		 work_tel.sendKeys("8802954478");
	 }
	 
	 //Sales Tax Data
	 public void salesstdstate()
	 {
		 Select stdst = new Select(sales_tax_state);
		 stdst.selectByIndex(1);
//		driver.findElement(By.xpath("//tbody/tr[2]/td[2]/div[1]/button[1]/div[1]/div[1]/div[1]")).click();
//		driver.findElement(By.xpath("//tbody/tr[2]/td[2]/div[1]/div[1]/div[1]/ul[1]/li[6]/a[1]/span[1]")).click();
	 }
	 
	 public void enterRate()
	 {
		 SalesTaxRateState.sendKeys("4");
	 }
	 
}
